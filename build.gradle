plugins {
    id 'java'
    id 'application'
    id 'org.javamodularity.moduleplugin' version '1.8.12'
    id 'org.openjfx.javafxplugin' version '0.0.13'
    id 'org.beryx.jlink' version '2.25.0'
    id 'org.jetbrains.kotlin.jvm' version '1.9.21'
}

group 'com.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    junitVersion = '5.9.1'
}

sourceCompatibility = '8'
targetCompatibility = '8'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

application {
    mainModule = 'com.example.kalmium'
    mainClass = 'com.example.kalmium.HelloApplication'
}

javafx {
    version = '17.0.2'
    modules = ['javafx.controls', 'javafx.fxml', 'javafx.web', 'javafx.media']
}

configurations {
    create("shadow")
    implementation.extendsFrom(shadow)
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.0'

    shadow 'io.netty:netty-all:4.1.101.Final'
    shadow 'io.netty:netty-transport-native-epoll:4.1.101.Final'
    shadow 'com.alibaba.fastjson2:fastjson2:2.0.22'

    shadow 'org.slf4j:slf4j-api:2.0.6'
    shadow 'org.apache.logging.log4j:log4j-slf4j2-impl:2.19.0'
    shadow 'org.apache.logging.log4j:log4j-api:2.19.0'
    shadow 'org.apache.logging.log4j:log4j-core:2.19.0'
    shadow 'commons-codec:commons-codec:1.15'
    shadow 'commons-logging:commons-logging:1.2'
    shadow 'commons-io:commons-io:2.11.0'
    //    shadow 'it.unimi.dsi:fastutil:8.5.11'
    shadow 'com.google.guava:guava:32.1.2-jre'
    shadow 'com.github.oshi:oshi-core:6.4.1'
    shadow 'io.github.pcmind:leveldb:1.2'
    shadow 'com.squareup.okhttp3:okhttp:5.0.0-alpha.11'

    shadow 'bot.inker.acj:runtime:1.3'

    shadow 'org.jetbrains:annotations:23.1.0'

    shadow 'org.reflections:reflections:0.10.2'

    shadow 'org.java-websocket:Java-WebSocket:1.5.4'

    shadow 'org.bouncycastle:bcprov-jdk18on:1.76'

    shadow 'org.lz4:lz4-java:1.8.0'
}

test {
    useJUnitPlatform()
}

compileKotlin {
    kotlinOptions {
        jvmTarget = '17'
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = '17'
    }
}

jar {
    from("LICENSE") {

    }

    with copySpec({
        from(configurations.shadow.collect {
            it.isDirectory() ? it : zipTree(it)
        })

        duplicatesStrategy(DuplicatesStrategy.EXCLUDE)

        exclude "META-INF/BC2048KE.SF"
    })

    manifest {
        attributes(
                'Main-Class': project.main_class,
                'Multi-Release': 'true',
        )
    }
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

jlink {
    imageZip = project.file("${buildDir}/distributions/app-${javafx.platform.classifier}.zip")
    options = ['--strip-debug', '--compress', '2', '--no-header-files', '--no-man-pages']
    launcher {
        name = 'app'
    }
}

jlinkZip {
    group = 'distribution'
}